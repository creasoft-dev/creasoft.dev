/**
 * Too that helps manage Algolia index.
 * 
 * Usage: node algolia-tool.js [action] [-v]
 * Where [action] can be clear or push
 * 
 * `clear` action - clears all entries in the index.
 * `push` action - 
 * Pushes the json files under ./_site/api. 
 * It relies on json files generated by the template files 
 * ./src/api/pages-json.njk, and 
 * ./src/api/posts-json.njk
 *
 * Env variables: 
 * ALGOLIA_APP_ID  - Algolia App ID 
 * ALGOLIA_ADMIN_API_KEY - Algolia Admin API key
 * When adding to the pipeline, make sure to configure those envs.
 */
require('dotenv').config();
const fs = require('fs');
const algoliasearch = require('algoliasearch');

const ALGOLIA_APP_ID = process.env.ALGOLIA_APP_ID;
const ALGOLIA_ADMIN_API_KEY = process.env.ALGOLIA_ADMIN_API_KEY;

console.log(`Initializing Algolia client with ALGOLIA_APP_ID=${ALGOLIA_APP_ID}`);
const client = algoliasearch(ALGOLIA_APP_ID, ALGOLIA_ADMIN_API_KEY);
const index = client.initIndex(process.env.ALGOLIA_INDEX_NAME);

const APP_VERSION = '0.1';
const API_PATH = './_site/api';

// Skip first two as its node and script name
var args = process.argv.slice(2);

const doClear = (args.some(el => el == 'clear'));
const doPush = (args.some(el => el == 'push'));
const verbose = (args.some(el => el == '-v'));

if (!(doClear || doPush)) {
    console.log('algolia-tool [action] [-v]');
    console.log('     Where [action] can be: clear, push');
}

function readJson(path) {
    let rawdata = fs.readFileSync(path);
    return JSON.parse(rawdata);
}

async function clearIndex() {
    try {
        verbose && console.log(`Clearing entries from index...`);
        return await index.clearObjects();
    } catch (error) {
        console.error('Error while clearing index: ' + error);
    }
}

async function pushToIndex(...dataFilePaths) {
    for (dataFilePath of dataFilePaths) {
        verbose && console.log(`Reading objects from file: ${dataFilePath}`);
        const json = readJson(dataFilePath);

        verbose && console.log(`Pushing ${json.length} objects...`);
        try {
            await index.saveObjects(json);
        } catch (error) {
            console.error('Error while pushing: ' + error);
        }
    }

    console.log("Pushing objects completed.");
}


(async() => {
    console.log('algolia-push v.%s started with args %j', APP_VERSION, args);
    if (doClear) {
        await clearIndex();
    }
    if (doPush) {
        await pushToIndex(`${API_PATH}/pages.json`, `${API_PATH}/posts.json`);
    }
})();